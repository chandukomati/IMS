@model IEnumerable<IMS.Models.tblRoleMaster>
@{
    ViewBag.Title = "RoleMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<input type="hidden" id="hdnRoleId" name="hdnRoleId" value="0">

<div class="card shadow mb-4">
    <div class="card-header py-4">
        <h6 class="m-0 font-weight-bold text-primary">Role Master</h6>
        <button type="button" id="btnOpen" data-toggle="modal" data-target="#FormModel" style="float: right; margin-top: -30px;"
                class="btn btn-success">
            <span class="glyphicon glyphicon-plus"></span> Add New
        </button>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="dataTable" class="table table-bordered " width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th class="hidden">RoleId</th>
                        <th>Name</th>
                        <th>UserName</th>
                        <th>Role Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td class="hidden">@Html.DisplayFor(modelItem => item.RoleId)</td>
                                <td class="name">@Html.DisplayFor(modelItem => item.Name)</td>
                                <td class="name">@Html.DisplayFor(modelItem => item.UserName)</td>
                                <td class="name">@Html.DisplayFor(modelItem => item.Role)</td>
                                <td>
                                    <a class="" onclick="deleterole(@item.RoleId)"><spam class="fas fa-trash"></spam></a>
                                    <a class="" data-toggle="modal" data-target="#FormModel" onclick="EditRole(@item.RoleId)"><spam class="fas fa-edit"></spam></a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>



<div id="divFormModel" class="row">
    <div class="modal fade" id="FormModel" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Role</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body" style="padding-top:0px">
                    <div style="margin-left:10px">
                        <div class="row">
                            <span class="CustomLabel">Name</span>
                            @Html.TextBox("Name", "", new { id = "txtName", @class = "form-control require", @maxlength = "100" })
                        </div>
                        <div class="row">
                            <span class="CustomLabel">User Name</span>
                            @Html.TextBox("UserName", null, new { id = "txtUserName", @class = "form-control require", @maxlength = "100" })
                        </div>
                        <div class="row">
                            <span class="CustomLabel">Role</span>
                            @Html.DropDownList("txtRole", new List<SelectListItem> { new SelectListItem { Text = "PMG", Value = "PMG", Selected = true }, new SelectListItem { Text = "LOG", Value = "LOG" } }, "Select Role", new { id = "txtRole", @class = "form-control require" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" type="button" onclick="CloseModel();" data-dismiss="modal">Cancel</button>
                    <button class="btn btn-success" id="btnSave" type="button" data-dismiss="modal">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $('#dataTable').DataTable();

        CloseModel();

        arrayRoles = @Html.Raw(Json.Encode(@ViewBag.Roles));

        $("body").on("click", "[id*=dataTable] .Edit", function () {
            var row = $(this).closest("tr");
            var psno = row.find(".psno");
            var role = row.find(".role1");
            $("#Psno").attr('disabled', true);
            $("#Psno").val(psno.html().trim())
            $("#Role").val(role.html().trim())
        });

        $("#btnSave").click(function () {
            var name = $("#txtName").val();
            var username = $("#txtUserName").val();
            var role = $("#txtRole").val();

            if (role && username && name) {
                $.ajax({
                    url: '@Url.Action("AddRole", "Home")',
                    data: { RoleId: $("#hdnRoleId").val(), Role: role, Name: name, Username: username },
                    dataType: "json",
                    type: "POST",
                    success: function (data) {
                        if (data.Key) {
                            toastr.success(data.Value);
                            window.setTimeout('window.location.href = "@Url.Action("RoleMaster", "Home")"', 2000);
                        }
                        else {
                            toastr.error(data.Value)
                        }
                    },
                    error: function (xhr) {
                    }
                });
            }
            else {
                toastr.warning('All feilds are mandatory');
            }
        });
    });

    function EditRole(RoleId) {
        CloseModel();
        $.ajax({
            url: '@Url.Action("GetRoleDetails", "Home")',
            dataType: "json",
            type: "POST",
            data: { RoleId: RoleId },
            success: function (result) {
                if (result.Key) {
                    $("#hdnRoleId").val(result.data.RoleId);
                    $("#txtRole").val(result.data.Role);
                    $("#txtUserName").val(result.data.UserName);
                    $("#txtName").val(result.data.Name);
                    $("#txtUserName").prop( "disabled", true );
                }
                else {
                    CloseModel()
                }
            }
        });
    }

    function deleterole(id) {
        if (confirm("Do you want to Delete?") == true) {
            $.ajax({
                url: '@Url.Action("DeleteRole", "Home")',
                data: { RID: id },
                dataType: "json",
                type: "POST",
                success: function (data) {
                    if (data.Key) {
                        toastr.success(data.Value);
                        window.setTimeout('window.location.href = "@Url.Action("RoleMaster", "Home")"', 2000);
                    }
                    else {
                        toastr.warning(data.Value);
                    }
                },
                error: function (xhr) {
                }
            });
        }
        else {
            userPreference = "Cancelled!";
        }
    }

    function CloseModel() {
        $("#hdnRoleId").val("0");
        $("#txtRole").val("");
        $("#txtUserName").val("");
        $("#hdnUserName").val("");
        $("#chkIsActive").prop("checked", false);
        $("#txtUserName").prop( "disabled", false );

    }
</script>


